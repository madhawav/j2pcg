from jnius import autoclass

class <<<SimpleClassName>>>(object):
    '''Wrapper on <<<CanonicalClassName>>>'''

    @classmethod
    def _fromProxy(cls, proxy):
        '''
        Internal Constructor to wrap around JAVA class <<<SimpleClassName>>>
        :param proxy:
        :return:
        '''
        if proxy is None:
            return None
        instance = cls.__new__(cls)
        instance._proxy = proxy
        return instance

    <<<ClassBody>>>

